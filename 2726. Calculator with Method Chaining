class Calculator {
    /** 
     * @param {number} value
     */
    constructor(value) {
        this.value = value; // Initialize with the starting value
    }
    
    /** 
     * @param {number} value
     * @return {Calculator}
     */
    add(value) {
        this.value += value; // Add the given value
        return this;         // Return the current instance for chaining
    }
    
    /** 
     * @param {number} value
     * @return {Calculator}
     */
    subtract(value) {
        this.value -= value; // Subtract the given value
        return this;         // Return the current instance for chaining
    }
    
    /** 
     * @param {number} value
     * @return {Calculator}
     */  
    multiply(value) {
        this.value *= value; // Multiply by the given value
        return this;         // Return the current instance for chaining
    }
    
    /** 
     * @param {number} value
     * @return {Calculator}
     */
    divide(value) {
        if (value === 0) {
            // Store the error message and reset value to avoid further operations
            this.error = "Division by zero is not allowed"; 
            return this; // Return the current instance for chaining
        } else {
            this.value /= value; // Divide by the given value
        }
        return this; // Return the current instance for chaining
    }
    
    /** 
     * @param {number} value
     * @return {Calculator}
     */
    power(value) {
        this.value **= value; // Raise to the power of the given value
        return this;         // Return the current instance for chaining
    }
    
    /** 
     * @return {number|string}
     */
    getResult() {
        // Return error message if it exists, else return the current value
        return this.error ? this.error : this.value; 
    }
}
