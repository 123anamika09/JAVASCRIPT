//n JavaScript, you can cancel a timeout that has been set using clearTimeout().
//When you create a timeout using setTimeout(), it returns a timeout ID, which you can then use to cancel the timeout before it occurs.
//const timeoutId = setTimeout(() => {
    console.log("This will not be logged if timeout is canceled");
}, 5000);

// Cancel the timeout before it executes
clearTimeout(timeoutId);


                                                                                                   // CODE

var cancellable = function(fn, args, t) {
     let timeoutId;
    
    // Create the timeout for executing fn after t milliseconds
    timeoutId = setTimeout(() => {
        fn(...args);
    }, t);

    // Return the cancellation function
    return function cancelFn() {
        clearTimeout(timeoutId);
    };
};
